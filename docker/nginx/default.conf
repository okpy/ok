upstream app_server {
    server unix:/tmp/server.sock fail_timeout=0;
}

server {
    listen 5000;

    # set the correct host(s) for your site
    server_name default_server;


    keepalive_timeout 650;
    keepalive_requests 10000;
    # See https://blog.percy.io/tuning-nginx-behind-google-cloud-platform-http-s-load-balancer-305982ddb340

    client_max_body_size 30M;

    # Choose a value higher than the gunicorn timeout
    proxy_connect_timeout       300;
    proxy_send_timeout          300;
    proxy_read_timeout          300;
    send_timeout                300;

    location /static/ {
        if ($http_x_forwarded_proto = "http") {
            return 301 https://$host$request_uri;
        }

        add_header Strict-Transport-Security "max-age=3600;" always;

        include  /etc/nginx/mime.types;
        sendfile        on;
        root /code/server/;
    }

    location / {
      # enable this if and only if you use HTTPS

      if ($http_x_forwarded_proto = "http") {
         return 301 https://$host$request_uri;
      }

      add_header Strict-Transport-Security "max-age=3600;" always;

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Nginx-IP $remote_addr;
      proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;

      add_header X-Frame-Options "SAMEORIGIN";

      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;

      proxy_pass http://app_server;
    }
}
